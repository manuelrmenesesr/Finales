generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int        @id @default(autoincrement())
  name      String
  entity    String?
  cutoffDay Int?
  Movements Movement[]

  @@unique([name, entity])
}

model CategoriesOnMovements {
  id                       Int      @id @default(autoincrement())
  categoryId               Int
  movementId               Int
  amount                   Decimal
  Category                 Category @relation(fields: [categoryId], references: [id])
  Movements                Movement @relation(fields: [movementId], references: [id])
  disbursementTransactions Debt[]   @relation("disbursementMovement")
  repaymentTransactions    Debt[]   @relation("repaymentMovement")

  @@unique([categoryId, movementId])
}

model Category {
  id                    Int                     @id @default(autoincrement())
  category              String
  subcategory           String
  categoriesOnMovements CategoriesOnMovements[]

  @@unique([category, subcategory])
}

model Debt {
  id                    Int                   @id @default(autoincrement())
  disbursement          Int
  repayment             Int
  remaining             Decimal
  DisbursementMovements CategoriesOnMovements @relation("disbursementMovement", fields: [disbursement], references: [id])
  RepaymentMovements    CategoriesOnMovements @relation("repaymentMovement", fields: [repayment], references: [id])

  @@unique([disbursement, repayment])
}

model ForeignMovement {
  id         Int      @id @default(autoincrement())
  amount     Decimal
  currency   String
  movementId Int      @unique
  Movements  Movement @relation(fields: [movementId], references: [id])
}

model Movement {
  id                    Int                     @id @default(autoincrement())
  concept               String
  amount                Decimal
  date                  DateTime
  accountId             Int
  Account               Account                 @relation(fields: [accountId], references: [id])
  categoriesOnMovements CategoriesOnMovements[]
  ForeignMovement       ForeignMovement?
}
